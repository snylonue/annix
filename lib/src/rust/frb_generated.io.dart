// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.24.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'package:uuid/uuid.dart';
import 'player.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_LocalStoreConnectionPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_LocalStoreConnectionPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexRepoDatabaseReadPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_MutexRepoDatabaseReadPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_PlayerPtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_PlayerPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StreamWrapperPlayerStateEventPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_StreamWrapperPlayerStateEventPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StreamWrapperProgressStatePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_StreamWrapperProgressStatePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexConnectionPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnectionPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  MutexConnection
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
          dynamic raw);

  @protected
  LocalStoreConnection dco_decode_RustOpaque_LocalStoreConnection(dynamic raw);

  @protected
  MutexRepoDatabaseRead dco_decode_RustOpaque_MutexRepoDatabaseRead(
      dynamic raw);

  @protected
  Player dco_decode_RustOpaque_Player(dynamic raw);

  @protected
  StreamWrapperPlayerStateEvent
      dco_decode_RustOpaque_StreamWrapperPlayerStateEvent(dynamic raw);

  @protected
  StreamWrapperProgressState dco_decode_RustOpaque_StreamWrapperProgressState(
      dynamic raw);

  @protected
  MutexConnection
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
          dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  UuidValue dco_decode_Uuid(dynamic raw);

  @protected
  AnnixPlayer dco_decode_annix_player(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  AnnixPlayer dco_decode_box_autoadd_annix_player(dynamic raw);

  @protected
  LocalDb dco_decode_box_autoadd_local_db(dynamic raw);

  @protected
  LocalStore dco_decode_box_autoadd_local_store(dynamic raw);

  @protected
  NativePreferenceStore dco_decode_box_autoadd_native_preference_store(
      dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<UuidValue> dco_decode_list_Uuid(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<TagItem> dco_decode_list_tag_item(dynamic raw);

  @protected
  LocalDb dco_decode_local_db(dynamic raw);

  @protected
  LocalStore dco_decode_local_store(dynamic raw);

  @protected
  NativePreferenceStore dco_decode_native_preference_store(dynamic raw);

  @protected
  NetworkStatus dco_decode_network_status(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  PlayerStateEvent dco_decode_player_state_event(dynamic raw);

  @protected
  ProgressState dco_decode_progress_state(dynamic raw);

  @protected
  TagItem dco_decode_tag_item(dynamic raw);

  @protected
  int dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  MutexConnection
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
          SseDeserializer deserializer);

  @protected
  LocalStoreConnection sse_decode_RustOpaque_LocalStoreConnection(
      SseDeserializer deserializer);

  @protected
  MutexRepoDatabaseRead sse_decode_RustOpaque_MutexRepoDatabaseRead(
      SseDeserializer deserializer);

  @protected
  Player sse_decode_RustOpaque_Player(SseDeserializer deserializer);

  @protected
  StreamWrapperPlayerStateEvent
      sse_decode_RustOpaque_StreamWrapperPlayerStateEvent(
          SseDeserializer deserializer);

  @protected
  StreamWrapperProgressState sse_decode_RustOpaque_StreamWrapperProgressState(
      SseDeserializer deserializer);

  @protected
  MutexConnection
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
          SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  UuidValue sse_decode_Uuid(SseDeserializer deserializer);

  @protected
  AnnixPlayer sse_decode_annix_player(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  AnnixPlayer sse_decode_box_autoadd_annix_player(SseDeserializer deserializer);

  @protected
  LocalDb sse_decode_box_autoadd_local_db(SseDeserializer deserializer);

  @protected
  LocalStore sse_decode_box_autoadd_local_store(SseDeserializer deserializer);

  @protected
  NativePreferenceStore sse_decode_box_autoadd_native_preference_store(
      SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<UuidValue> sse_decode_list_Uuid(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<TagItem> sse_decode_list_tag_item(SseDeserializer deserializer);

  @protected
  LocalDb sse_decode_local_db(SseDeserializer deserializer);

  @protected
  LocalStore sse_decode_local_store(SseDeserializer deserializer);

  @protected
  NativePreferenceStore sse_decode_native_preference_store(
      SseDeserializer deserializer);

  @protected
  NetworkStatus sse_decode_network_status(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  PlayerStateEvent sse_decode_player_state_event(SseDeserializer deserializer);

  @protected
  ProgressState sse_decode_progress_state(SseDeserializer deserializer);

  @protected
  TagItem sse_decode_tag_item(SseDeserializer deserializer);

  @protected
  int sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
          MutexConnection self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_LocalStoreConnection(
      LocalStoreConnection self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexRepoDatabaseRead(
      MutexRepoDatabaseRead self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_Player(Player self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_StreamWrapperPlayerStateEvent(
      StreamWrapperPlayerStateEvent self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_StreamWrapperProgressState(
      StreamWrapperProgressState self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
          MutexConnection self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_Uuid(UuidValue self, SseSerializer serializer);

  @protected
  void sse_encode_annix_player(AnnixPlayer self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_annix_player(
      AnnixPlayer self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_local_db(LocalDb self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_local_store(
      LocalStore self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_native_preference_store(
      NativePreferenceStore self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Uuid(List<UuidValue> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_tag_item(List<TagItem> self, SseSerializer serializer);

  @protected
  void sse_encode_local_db(LocalDb self, SseSerializer serializer);

  @protected
  void sse_encode_local_store(LocalStore self, SseSerializer serializer);

  @protected
  void sse_encode_native_preference_store(
      NativePreferenceStore self, SseSerializer serializer);

  @protected
  void sse_encode_network_status(NetworkStatus self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_player_state_event(
      PlayerStateEvent self, SseSerializer serializer);

  @protected
  void sse_encode_progress_state(ProgressState self, SseSerializer serializer);

  @protected
  void sse_encode_tag_item(TagItem self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  void rust_arc_increment_strong_count_RustOpaque_LocalStoreConnection(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_LocalStoreConnection(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_LocalStoreConnectionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_increment_strong_count_RustOpaque_LocalStoreConnection');
  late final _rust_arc_increment_strong_count_RustOpaque_LocalStoreConnection =
      _rust_arc_increment_strong_count_RustOpaque_LocalStoreConnectionPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_LocalStoreConnection(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_LocalStoreConnection(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_LocalStoreConnectionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_decrement_strong_count_RustOpaque_LocalStoreConnection');
  late final _rust_arc_decrement_strong_count_RustOpaque_LocalStoreConnection =
      _rust_arc_decrement_strong_count_RustOpaque_LocalStoreConnectionPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexRepoDatabaseRead(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexRepoDatabaseRead(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexRepoDatabaseReadPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_increment_strong_count_RustOpaque_MutexRepoDatabaseRead');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexRepoDatabaseRead =
      _rust_arc_increment_strong_count_RustOpaque_MutexRepoDatabaseReadPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexRepoDatabaseRead(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexRepoDatabaseRead(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexRepoDatabaseReadPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_decrement_strong_count_RustOpaque_MutexRepoDatabaseRead');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexRepoDatabaseRead =
      _rust_arc_decrement_strong_count_RustOpaque_MutexRepoDatabaseReadPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_Player(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_Player(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_PlayerPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_increment_strong_count_RustOpaque_Player');
  late final _rust_arc_increment_strong_count_RustOpaque_Player =
      _rust_arc_increment_strong_count_RustOpaque_PlayerPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_Player(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_Player(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_PlayerPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_decrement_strong_count_RustOpaque_Player');
  late final _rust_arc_decrement_strong_count_RustOpaque_Player =
      _rust_arc_decrement_strong_count_RustOpaque_PlayerPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_StreamWrapperPlayerStateEvent(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_StreamWrapperPlayerStateEvent(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_StreamWrapperPlayerStateEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_increment_strong_count_RustOpaque_StreamWrapperPlayerStateEvent');
  late final _rust_arc_increment_strong_count_RustOpaque_StreamWrapperPlayerStateEvent =
      _rust_arc_increment_strong_count_RustOpaque_StreamWrapperPlayerStateEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_StreamWrapperPlayerStateEvent(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperPlayerStateEvent(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperPlayerStateEventPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_decrement_strong_count_RustOpaque_StreamWrapperPlayerStateEvent');
  late final _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperPlayerStateEvent =
      _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperPlayerStateEventPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_StreamWrapperProgressState(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_StreamWrapperProgressState(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_StreamWrapperProgressStatePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_increment_strong_count_RustOpaque_StreamWrapperProgressState');
  late final _rust_arc_increment_strong_count_RustOpaque_StreamWrapperProgressState =
      _rust_arc_increment_strong_count_RustOpaque_StreamWrapperProgressStatePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_StreamWrapperProgressState(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperProgressState(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperProgressStatePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_decrement_strong_count_RustOpaque_StreamWrapperProgressState');
  late final _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperProgressState =
      _rust_arc_decrement_strong_count_RustOpaque_StreamWrapperProgressStatePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnectionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnectionPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnectionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_annix_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnection =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockMutexConnectionPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}
