name: Canary Release
on: push

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup | Java
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Setup | Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: ${{ secrets.FLUTTER_CACHE_KEY }}
      - name: Setup | Dependencies
        run: flutter pub get
      - name: Setup | Android NDK
        run: |
          # Apply to gradle
          mkdir -p ~/.gradle
          echo "ANDROID_NDK=${ANDROID_NDK_ROOT}" >> ~/.gradle/gradle.properties
          cat ~/.gradle/gradle.properties

          # /usr/include/bits
          sudo apt update -y
          sudo apt install libc6-dev-i386
          
          # Install rust targets
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android
          rustup update

          # Install cargo-ndk
          cargo install cargo-ndk
          cd annix
          cargo ndk -o ../android/app/src/main/jniLibs build
          cd ..
      - name: Setup | Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > keystore.jks
          echo "${{ secrets.ANDROID_KEYSTORE_PROPERTIES }}" | base64 -d > ./android/keystore.properties
      - name: Build | Apk
        run: flutter build apk --verbose --split-per-abi
      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: annix-android
          path: |
            ./build/app/outputs/apk/release/*.apk
          retention-days: 1

  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup | Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: ${{ secrets.FLUTTER_CACHE_KEY }}
      - name: Setup | Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y libunwind-dev libasound2-dev
          sudo apt install -y tar clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libjsoncpp-dev
          rustup update
          flutter config --enable-linux-desktop
          flutter pub get
      - name: Build | Linux
        run: |
          flutter build linux --verbose
          cd build/linux/x64/release/
          zip -r annix-linux64.zip bundle
      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: annix-linux64
          path: ./build/linux/x64/release/annix-linux64.zip
          retention-days: 1

  macOS:
    runs-on: macos-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup | Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: ${{ secrets.FLUTTER_CACHE_KEY }}
      - name: Setup | Dependencies
        run: |
          rustup target add x86_64-apple-darwin aarch64-apple-darwin
          rustup update
          flutter pub get
      - name: Build | macOS
        run: |
          flutter build macos --verbose
          cd build/macos/Build/Products/Release
          ditto -c -k --sequesterRsrc --keepParent Annix.app annix-macos.zip
      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: annix-macos
          path: |
            ./build/macos/Build/Products/Release/annix-macos.zip
          retention-days: 1

  windows:
    runs-on: windows-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup | Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: ${{ secrets.FLUTTER_CACHE_KEY }}
      - name: Setup | Dependencies
        run: |
          rustup update
          flutter config --enable-windows-desktop
          flutter pub get
      - name: Build | Windows
        run: |
          flutter build windows --verbose
          cp -r build/windows/runner/Release annix-win64
          tar.exe -a -c -f annix-win64.zip annix-win64
      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: annix-win64
          path: |
            ./annix-win64.zip
          retention-days: 1
  iOS:
    runs-on: macos-latest
    env:
      KEYCHAIN: job-${{ github.job }}-${{ github.run_id	}}-${{ github.run_number }}-${{ github.run_attempt }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup | Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: ${{ secrets.FLUTTER_CACHE_KEY }}
      - name: Setup | Certificates
        uses: apple-actions/import-codesign-certs@v1
        with:
          keychain: ${{ env.KEYCHAIN }}
          p12-file-base64: ${{ secrets.IOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.IOS_CERTIFICATES_P12_PASSWORD }}
      - name: Setup | Provisioning Profiles
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ env.BUNDLE_ID }}
          issuer-id: ${{ secrets.IOS_APPSTORE_CONNECT_API_ISSUER }}
          api-key-id: ${{ secrets.IOS_APPSTORE_CONNECT_API_KEY_ID }}
          api-private-key: ${{ secrets.IOS_APPSTORE_CONNECT_API_KEY_DATA }}
      - name: Setup | Dependencies
        run: |
          rustup target add x86_64-apple-darwin aarch64-apple-darwin
          rustup update
          flutter pub get
      - name: Build | iOS
        run: |
          flutter build ios --release --verbose --build-number ${{ github.run_number }} --no-codesign
          xcodebuild -workspace $PWD/ios/Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath $PWD/build/ios/iphoneos/Runner.xcarchive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED="NO"
          xcodebuild -exportArchive -archivePath $PWD/build/ios/iphoneos/Runner.xcarchive -exportOptionsPlist $PWD/ios/exportOptions.plist -exportPath $PWD/build/ios/iphoneos/Runner.ipa CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED="NO"
      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: annix-ios
          path: ./build/ios/iphoneos/Runner.ipa/*.ipa
          retention-days: 1

  publish:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ android, linux, macOS, windows, iOS ]
    runs-on: ubuntu-20.04
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y gettext-base

      - run: |
          (echo 'SUBJECT=Annix development (canary) build') >> $GITHUB_ENV
          gh release delete canary --yes || true
          git push origin :canary || true
      - name: Publish release
        run: |
          gh release create canary --prerelease --title "$SUBJECT" --target $GITHUB_SHA annix-android/*.apk annix-linux64/* annix-macos/* annix-win64/*
